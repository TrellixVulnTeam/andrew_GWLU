from pytypes import typelogged, dump_cache


@typelogged
def logtest(a, b, c=7, *var, **kw): return 7, a, b


@typelogged
class logtest_class(object):
    def logmeth(self, b): return 2*b

    @classmethod
    def logmeth_cls(cls, c): return len(c)

    @staticmethod
    def logmeth_static(c): return len(c)

    @staticmethod
    def logmeth2(q): return q + 3.14

    @staticmethod
    def logmeth3(q): return q + '3.14'

    @property
    def log_prop(self): return self._log_prop

    @log_prop.setter
    def log_prop(self, val): self._log_prop = val


logtest(3, 2, 5, 6, 7, 3.1, y=3.2, x=9)
logtest(3.5, 7.3, 5, 6, 7, 3.1, y=3.2, x=9)
logtest('abc', 7.3, 5, 6, 7, 3.1, y=2, x=9)
lcs = logtest_class()
lcs.log_prop = (7.8, 'log')
lcs.log_prop
lcs.logmeth2(8)
lcs.logmeth3('abcd')
logtest_class.logmeth_cls('hijk')
logtest_class.logmeth_static(range(3))

dump_cache()

"""----------------------------------------------------------------
Automatically generated stubfile of

typelogged.py
MD5-Checksum: 20f49350db9b4b8bec085a5e08829e48

This file was generated by pytypes.typelogger v1.0b1
at 2017-08-25T13:48:07.134195.

Type information is based on runtime observations while running
CPython 3.6.1 final 0


WARNING:
If you edit this file, be aware that it was automatically generated.
Save your customized version to a distinct place;
this file might be overwritten without notice.

-------------------------------------------------------------------

from typing import Tuple, Union


def logtest(a: Union[float, str], b: float, c: int,
            *var: float, **kw: Union[float, int]) ->
            Union[Tuple[int, float, float], Tuple[int, str, float]]: ...

class logtest_class(object):

    @classmethod
    def logmeth_cls(cls, c: str) -> int: ...
    @staticmethod
    def logmeth_static(c: range) -> int: ...
    @staticmethod
    def logmeth2(q: int) -> float: ...
    @staticmethod
    def logmeth3(q: str) -> str: ...
    @property
    def log_prop(self) -> Tuple[float, str]: ...
    @log_prop.setter
    def log_prop(self, val: Tuple[float, str]) -> None: ...

----------------------------------------------------------------"""
